了解线程

“介绍”： 在Python中， 想要实现多任务除了使用进程，还可以使用线程来完成，线程是实现多任务的另外一种方式。

“概念”：线程是进程中执行代码的一个分支 ，每个执行分支(线程)要想工作执行代码需要cpu进行调度 ，也就是说线程是cpu调度的基本单位。进程是操作系统分配资源的基本单位
“注意”：一个程序运行后至少有一个进程，一个进程默认有一个线程，进程里面可以创建多个线程，线程是依附在进程里面的，没有进程就没有线程。
线程的注意点

“线程的注意点”：
1.线程之间执行是无序的
2. 使用deamon， 可以让子线程跟着主线程结束
3.线程之间共享全局变量
4.线程之间共享全局变量数据出现错误问题
“需求”:
1.定义两个函数 ，实现循环100万次，每循环一次给全局变量加1。
2.创建两个子线程执行对应的两个函数 ，查看计算后的结果。
线程的注意点
“全局变量数据错误的办法”：
线程同步：保证同一时刻只能有一个线程去操作全局变量
“线程同步方式”：
1. 线程等待(join)
2.互斥锁:
“小结”:

 1.互斥锁的作用就是保证同一时刻只能有一个线程去操作共享数据，保证共享数据不会出现错误问题。

　2.使用互斥锁的好处确保某段关键代码只能由一个线程从头到尾完整地去执行。

　3.使用互斥锁会影响代码的执行效率，多任务改成了单任务执行。

4.互斥锁如果没有使用好容易出现死锁的情况。

“死锁”：一直等待对方释放锁的情景就是死锁